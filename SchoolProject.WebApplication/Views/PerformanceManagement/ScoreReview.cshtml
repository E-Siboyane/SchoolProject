@model SchoolProject.WebApplication.ViewModels.ScoreReviewViewModel
@using SchoolProject.WebApplication.ViewModels
@{
    ViewBag.Title = "Performance Review Scoring";
}
<h2>Manage Performance Review Contents</h2>
<hr />
@*Display Error messages*@
@if (!ViewData.ModelState.IsValid) {
    <div class="row">
        <div class="alert alert-danger alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            <p>
                @Html.ValidationSummary()
            </p>
        </div>
    </div>
}

    @*Display Processing Status*@
    @if ((!string.IsNullOrEmpty(Model.ProcessingStatusMessage)) && (!Model.ProcessingStatus)) {
        <div class="row">
            <div class="alert alert-danger alert-dismissable">
                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                <p>
                    @Html.Raw(Model.ProcessingStatusMessage)
                </p>
            </div>
        </div>
    }

    @*Display Processing Status*@
    @if ((!string.IsNullOrEmpty(Model.ProcessingStatusMessage)) && (Model.ProcessingStatus)) {
        <div class="row">
            <div class="alert alert-success alert-dismissable">
                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                <p>
                    @Html.Raw(Model.ProcessingStatusMessage)
                </p>
            </div>
        </div>
    }

    @if ((Model.CurrentReviewStatus == ReviewProcessStatus.Content_Creation_Completed)) {
        using (Html.BeginForm("ScoreReview", "PerformanceManagement", FormMethod.Post, new { @id = "ManageScoreReview" })) {

            <div class="panel panel-success" style="border-color:#1c84c6">
                <a role="button" data-toggle="collapse" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="trigger collapsed">
                    <div class="panel-heading" role="tab" id="headingOne" style="background-color:#1c84c6">
                        <h4 class="panel-title">
                            <span style="color:#ffffff">Performance Review Score Update</span>
                        </h4>
                    </div>
                </a>
                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body" style="margin-right:12px;margin-left:12px">

                        @if (Model.MeasureId > 0) {
                            @Html.HiddenFor(model => model.MeasureId)
                            @Html.HiddenFor(model => model.PerformanceReviewId)
                            @Html.HiddenFor(model => model.IsLineManager)
                            @Html.HiddenFor(model => model.CurrentReviewStatus)
                            @Html.HiddenFor(model => model.MeasureName)
                            @Html.HiddenFor(model => model.MeasureWeight)
                            @Html.HiddenFor(model => model.MaximumScore)
                            @Html.HiddenFor(model => model.Username)
                            @Html.HiddenFor(model => model.ManagerUsername)
                            @Html.HiddenFor(model => model.StrategicGoal)
                            @Html.HiddenFor(model => model.Objective)
                            <div class="row">
                                <div class="col-sm-4">
                                    <div class="row">
                                        @Html.Label("Strategic Goal", htmlAttributes: new { @class = "control-label" })<br />
                                        @Html.Raw(Model.StrategicGoal)
                                    </div>
                                    <div class="row">
                                        @Html.Label("Objective", htmlAttributes: new { @class = "control-label" })<br />
                                        @Html.Raw(Model.Objective)
                                    </div>
                                    <div class="row">
                                        @Html.Label("Measure", htmlAttributes: new { @class = "control-label" })<br />
                                        @Html.Raw(string.Format("{0} - <b>(Weight {1}%)</b>", Model.MeasureName, decimal.Round(Model.MeasureWeight, 2, MidpointRounding.AwayFromZero)))
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        @Html.Label("Score", htmlAttributes: new { @class = "control-label" })<br />
                                        @Html.TextBoxFor(model => model.Score, new { @class = "form-control", @required = true })
                                    </div>
                                    <div class="row">
                                        @Html.Label("Comments", htmlAttributes: new { @class = "control-label" })<br />
                                        @Html.TextAreaFor(model => model.CaptureComments, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-offset-8 col-md-4">
                                        <br />
                                        <button type="submit" class="btn btn-sm btn-primary" role="button">
                                            <span class="glyphicon glyphicon-plus-sign">
                                            </span>&nbsp;Update Measure Score
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            if (Model.ReviewContents.Count > 0) {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <tr>
                            <th>@Html.Raw("Strategic Goal")</th>
                            <th>@Html.Raw("Objective")</th>
                            <th>@Html.Raw("Measure")</th>
                            <th>@Html.Raw("Weight")</th>
                            <th>@Html.Raw("Employee Score")</th>
                            <th>@Html.Raw("Manager Score")</th>
                            <th>@Html.Raw("Comments - Employee")</th>
                            <th>@Html.Raw("Comments - Manger")</th>
                            <th></th>
                        </tr>
                        @foreach (var group in Model.ReviewContents.GroupBy(x => x.StrategicGoalName)) {
                            <tr class="group-header">
                                <td colspan="9" style="text-align:center;font-weight:bold; cursor:pointer">
                                    @Html.Raw(string.Format("{0} - Total Weight {1} %", @group.Key, decimal.Round(@group.Sum(x => x.MeasureWeight), 2, MidpointRounding.AwayFromZero)))
                                </td>
                            </tr>
                            foreach (var item in group) {
                                <tr>
                                    <td>@Html.Raw(item.StrategicGoalName)</td>
                                    <td>@Html.Raw(item.ObjectiveName)</td>
                                    <td>@Html.Raw(item.MeasureName)</td>
                                    <td>@Html.Raw(item.MeasureWeight)</td>
                                    <td>@Html.Raw(item.EmployeeScore)</td>
                                    <td>@Html.Raw(item.ManagerScore)</td>
                                    <td>@Html.Raw(item.EmployeeComments)</td>
                                    <td>@Html.Raw(item.ManagerComments)</td>
                                    <td>
                                        <a role="button"  class="btn btn-sm btn-primary" href="@Url.Action("ScoreReview", "PerformanceManagement",
                                                             new { performanceReviewId = Model.PerformanceReviewId, measureId = item.MeasureId })">
                                            <span class="glyphicon glyphicon-pencil" style="color:white; font-weight:400">
                                            </span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>

                <div class="row">
                    <div class="col-md-offset-4 col-md-8">
                        <a href="@Url.Action("ManageReview", "PerformanceManagement", new { username = Model.Username})" class="btn btn-md btn-primary" role="button">
                            <span class="glyphicon glyphicon-chevron-left glyphicon-chevron-left">
                            </span>&nbsp;Back To Performance Reviews Listing
                        </a>
                        @if (string.Compare(User.Identity.Name, Model.ManagerUsername, true) == 0) {
                            <a href="@Url.Action("ConfirmReviewScoring", "PerformanceManagement",
                                new {performanceReviewId = Model.PerformanceReviewId, managerUsername = Model.ManagerUsername })" class="btn btn-md btn-primary" role="button">
                                <span class="glyphicon glyphicon-pencil">
                                </span>&nbsp;Comfirm Performance Review Contents
                            </a>
                        }
                    </div>
                </div>
            }

        }
    }
    else {
        <div class="row">
            <div class="alert alert-danger alert-dismissable">
                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                <p>
                    @Html.Raw("Performance Review Scoring Is Completed. Navigate to Manage Reviews and view the review scores!!")
                </p>
            </div>
        </div>
    }

    @section Styles {
        <style>
            a:hover, a:visited, a:link, a:active {
                text-decoration: none;
            }

            .controls {
                margin-bottom: 10px;
            }

            .collapse-group {
                padding: 10px;
                border: 1px solid darkgrey;
                margin-bottom: 10px;
            }


            input[type="number"]::-webkit-outer-spin-button,
            input[type="number"]::-webkit-inner-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }

            input[type="number"] {
                -moz-appearance: textfield;
            }
        </style>
    }

    @section Scripts {
        <script type="text/javascript">
            $(document).ready(function () {

                //initial bootstrap tooltip and hide after click event
                $('body').tooltip({
                    selector: '[data-toggle="tooltip"], [title]:not([data-toggle="popover"])',
                    trigger: 'hover',
                    container: 'body'
                }).on('click mousedown mouseup', '[data-toggle="tooltip"], [title]:not([data-toggle="popover"])', function () {
                    $('[data-toggle="tooltip"], [title]:not([data-toggle="popover"])').tooltip('destroy');
                });

                $(function () {
                    $('.group-header').click(function () {
                        $(this).nextUntil('.group-header').toggle();
                    });
                });

            });
        </script>
    }
